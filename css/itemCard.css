@import "./gunCard.css";
@import "./shieldCard.css";

.itemCardSheet {
	color: white;
}

.itemCardFlex {
	display:flex;
}

.itemHeaderQuarter {
	width: 25%;
}

.itemCardName {
	width: 50%;
	font-size: 2em;
	line-height: 2em;
}

.itemCardName > input{
	height: 1.8em;
	text-align: center;
}

.itemCardLvlType {
	display: flex;
	flex-flow: row;
}

.itemCardLvl {
	width: 30%;
}

.itemLevelLabel {
	height: 1.8em;
	line-height: 1.8em;
	text-align: center;
}

.itemCardType {
	height: 4em;
	width: 67%;
}

.prePictureSelector > *, 
.pictureSelector > * {
	margin: 0em 0em 0em 0.5em;
	height: 3.8em;
	cursor: pointer;
	width: max-content;
}

.pictureSelector {
	position: relative;
	display: flex;
	background: url(../../../ui/parchment.jpg) repeat;
	flex-flow: column;
	align-content: center;
}

.typeText {
	position: relative;
	height: 0px;
	font-size: 10px;
	bottom: 18px;
	left: 8px;
	color: black;
	pointer-events: none;
}

.picNoneDisplay {
	display: none;
}

.levelInput[type="Number"] {
	height: 2em;
	width: 100%;
	text-align: center;
}

.itemCardInput[type="Number"] {
	color: white;
	text-align: center;
}

.itemDataBlock {
	margin: 15px 0em 5px 0em;
	width: 40%;
	flex-flow: column;
	border: 10px solid;
	border-image-slice: 27% fill;
	border-image-source: url("../assets/standalone/itemCardInfoHeaderBg.svg");
	border-image-width: 10px;
	border-image-repeat: round;
	padding: 5px;
	align-items: center;
}

.itemDataHeader {
	text-align: center;
	height: 25px;
	line-height: 25px;
	padding: 0em 1.5em;
	border-image-slice: 7 fill;
	border-image-source: url("../assets/standalone/itemCardInfoHeaderBg.svg");
	border-image-width: 40px;
	border-image-repeat: round;
	width: max-content;
}

.itemDataHeader:nth-of-type(1) {
	position: relative;
	top: -24.5px;
}

.itemCardPicture {
	width: 60%;
	display: flex;
	justify-content: center;
	align-items: center;
}

.itemCardElementNotes {
	display: flex;
}

.itemCardElements {
	/**
	 * TODO: Replace when ElementPictureSelector is implemented
	 *  	 4em;
	 */
	width: 7em;
	height: 7em;

}

.itemCardDescription {
	width: calc(100% - 7em);
}

.itemCardRedText {
	color: darkred;
	font-weight: bold;
	display: flex;
}

.itemCardRedTextLabel,
.itemCardBMInfoLabel {
	/**
	 * TODO: Replace when ElementPictureSelector is implemented
	 *  	 4em;
	 */
	width: 7em;
}

.itemCardBMInfo {
	display: flex;
}

.itemCardValue {
	float: right;
	width: 20%;
}

.itemCardValue input {
	width:  max(50px, 50%);
}